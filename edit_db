#!/usr/bin/python
"""edit_db part of jukebox - add tags to db.
    Copyright (C) 2012 Ali Raheem

    This program is part of jukebox.

    Jukebox is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Jukebox is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
"""
import serial, os, sys, sqlite3

dbName = "db"
serialDevice = "/dev/RFIDreader"
s = 0
db = 0
c = 0

def init_serial():
        global s
        s = serial.Serial(serialDevice, 115200)
        s.open()

def init_db():
	global db
	global c
	db = sqlite3.connect(dbName)
	c = db.cursor()
	try:
		c.execute("select * from tags")
	except sqlite3.OperationalError:
		print "Creating database."
		c.execute('create table tags (id INTEGER PRIMARY KEY, tag TEXT UNIQUE, name TEXT, cmd TEXT)')
		db.commit()
	l = c.fetchall()
	print "%d tags known."%len(l)

def parse(code):
#Should return a plain string used as the SQL tag.
	code = code.split('-')[1]
	try:
		code = code.split('\r')[0]
	except IndexError:
		try:
			code = code.split('\n')[0]
		except IndexError:
			print "Could not parse code."
	return code

def play(code):
	c.execute('select cmd,name,id from tags where tag=?',(code,))
	result = c.fetchone()
	if(result):
		cmd = result[0]
		name = result[1]
		id = result[2]
		if(raw_input("Found %s (%s) to run '%s' delete? [y/n] "%(name,code,cmd))!='y'):
			return 1
		c.execute("delete from tags where id=?", (id, ))
		db.commit()
		return 1
	else:
		print "Tag not found!"
		if(raw_input("Would you like to add it? [y/n] ")!='y'):
			return 1
		name = raw_input("Give it a name: ")
		cmd = raw_input("What command should be run: ")
		if(raw_input("So add %s (%s) to run '%s'(make sure this is escaped)? [y/n] "%(name,code,cmd))!='y'):
			return 1
		c.execute("insert into tags values (NULL, ?, ?, ?)", (code, name, cmd, ))
		print "Added %s (%s) to run '%s'"%(name, code, cmd)
		db.commit()
		return 0

def wait():
	while 1:
		if(s.inWaiting()):
			code =  s.read(s.inWaiting())
			code = parse(code)
			print "Read code %s..."%code
			play(code)
			s.flushOutput()
def main():
	init_db()
	init_serial()
	wait()

if __name__ == "__main__":
        sys.exit(main())


